(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{388:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"关于git的使用实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于git的使用实践"}},[s._v("#")]),s._v(" 关于git的使用实践")]),s._v(" "),a("h3",{attrs:{id:"_1、-gitconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、-gitconfig"}},[s._v("#")]),s._v(" 1、 .gitconfig")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.gitconfig\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Hiroshi.tao\n    email "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" me@tcw.im\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    ui "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("alias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    st "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" status\n    ci "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" commit\n    co "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" checkout\n    br "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" branch\n    unstage "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" reset HEAD\n    last "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" log -1\n    logs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" log --color --graph --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("format:"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'")]),s._v(" --abbrev-commit\n    lg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" log --color --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline --abbrev-commit\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    default "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" simple\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("core"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    editor "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"_2、-gitmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、-gitmessage"}},[s._v("#")]),s._v(" 2、 .gitmessage")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.gitmessage\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# head: <type>(<scope>): <subject>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - type: feat, fix, docs, style, refactor, test, chore, perf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - scope: can be empty (eg. if the change is a global or difficult to assign to a single component)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - subject: start with verb (such as 'change'), 50-character line, english")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# body: 72-character wrapped. This should answer:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * Why was this change necessary?")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * How does it address the problem?")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * Are there any side effects?")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# footer: ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - Include a link to the ticket, if any.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - BREAKING CHANGE")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global commit.template ~/.gitmessage\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.vimrc \nautocmd Filetype gitcommit setlocal spell "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("textwidth")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("72")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"_3、-gpg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、-gpg"}},[s._v("#")]),s._v(" 3、 gpg")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ gpg --gen-key\n$ gpg --list-keys --keyid-format LONG\n$ gpg --armor --export Your_GPG_ID\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global commit.gpgsign "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.signingkey Your_GPG_ID\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("Utterances")],1)}),[],!1,null,null,null);t.default=e.exports}}]);